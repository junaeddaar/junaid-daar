{"version":3,"sources":["images/signup-image.jpg","images/signin-image.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","name","method","id","for","type","placeholder","accept","href","value","src","require","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.442987c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/signup-image.d4efdd49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/signin-image.35459822.jpg\";","import React, { Component } from 'react';\nimport './App.css';\nimport './fonts/material-icon/css/material-design-iconic-font.min.css';\nimport './fonts/style.css';\n\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <div className=\"main\">\n      <section className=\"signup\">\n            <div className=\"container\">\n                <div className=\"signup-content\">\n                    <div className=\"signup-form\">\n                        <h2 className=\"form-title\">Sign up</h2>\n                        { <a name=\"sign_up\"></a> }\n                        <form method=\"POST\" className=\"register-form\" id=\"register-form\">\n                            <div className=\"form-group\">\n                                <label for=\"name\"><i className=\"zmdi zmdi-account material-icons-name\"></i></label>\n                                <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your Name\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label for=\"email\"><i className=\"zmdi zmdi-email\"></i></label>\n                                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your Email\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label for=\"pass\"><i className=\"zmdi zmdi-lock\"></i></label>\n                                <input type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"Password\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label for=\"re-pass\"><i className=\"zmdi zmdi-lock-outline\"></i></label>\n                                <input type=\"password\" name=\"re_pass\" id=\"re_pass\" placeholder=\"Repeat your password\"/>\n                            </div>\n                            <div className=\"form-group\">\n                              \n\t\t\t\t\t\t\t\t\t  <label>Chose Profile Picture: \n\t\t\t\t\t\t\t\t\t\t<input type=\"file\" className=\"image-upload\" accept=\"image/*\" />\n\t\t\t\t\t\t\t\t\t  </label>\n                               <br/><br/><br/>\n                            </div>\n                            <div className=\"form-group form-button\">\n                                <a href=\"home.html\" name=\"signup\" id=\"signup\" className=\"form-submit\" value=\"Register\">Sign Up</a>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"signup-image\">\n                        <figure><img  src={require('./images/signup-image.jpg')} alt=\"sign up image\"/></figure>\n                        <a href=\"#sign_in\" className=\"signup-image-link\">I am already member</a>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n\n        <section className=\"sign-in\">\n            <div className=\"container\">\n                <div className=\"signin-content\">\n                    <div className=\"signin-image\">\n                        <figure>\n                          <img src={require('./images/signin-image.jpg')} alt=\"sign in image\"/>\n                        </figure>\n                        <a href=\"#sign_up\" className=\"signup-image-link\">Create an account</a>\n                    </div>\n\n                    <div className=\"signin-form\">\n                        <h2 className=\"form-title\" >Login</h2>\n                        <a name=\"sign_in\"></a>\n                        <form method=\"POST\" className=\"register-form\" id=\"login-form\">\n                            <div className=\"form-group\">\n                                <label for=\"your_name\"><i className=\"zmdi zmdi-account material-icons-name\"></i></label>\n                                <input type=\"text\" name=\"your_name\" id=\"your_name\" placeholder=\"Your Name\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label for=\"your_pass\"><i className=\"zmdi zmdi-lock\"></i></label>\n                                <input type=\"password\" name=\"your_pass\" id=\"your_pass\" placeholder=\"Password\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"checkbox\" name=\"remember-me\" id=\"remember-me\" className=\"agree-term\" />\n                                <label for=\"remember-me\" className=\"label-agree-term\"><span><span></span></span>Remember me</label>\n                            </div>\n                            <div className=\"form-group form-button\">\n                                <a href=\"home.html\" name=\"signin\" id=\"signin\"  className=\"form-submit\" value=\"Log in\">Login</a>\n                            </div>\n                        </form>\n                        \n                    </div>\n                </div>\n            </div>\n        </section>\n\n      </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}